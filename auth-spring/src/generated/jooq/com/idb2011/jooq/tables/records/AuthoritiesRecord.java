/*
 * This file is generated by jOOQ.
 */
package com.idb2011.jooq.tables.records;


import com.idb2011.jooq.tables.Authorities;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthoritiesRecord extends TableRecordImpl<AuthoritiesRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>authorities.username</code>.
     */
    public AuthoritiesRecord setUsername(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>authorities.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>authorities.authority</code>.
     */
    public AuthoritiesRecord setAuthority(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>authorities.authority</code>.
     */
    public String getAuthority() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Authorities.AUTHORITIES.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Authorities.AUTHORITIES.AUTHORITY;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getAuthority();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getAuthority();
    }

    @Override
    public AuthoritiesRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AuthoritiesRecord value2(String value) {
        setAuthority(value);
        return this;
    }

    @Override
    public AuthoritiesRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthoritiesRecord
     */
    public AuthoritiesRecord() {
        super(Authorities.AUTHORITIES);
    }

    /**
     * Create a detached, initialised AuthoritiesRecord
     */
    public AuthoritiesRecord(String username, String authority) {
        super(Authorities.AUTHORITIES);

        setUsername(username);
        setAuthority(authority);
    }
}
